import{_ as a,c as e,a0 as o,o as t}from"./chunks/framework.iBbVlLT2.js";const m=JSON.parse('{"title":"Intro","description":"","frontmatter":{},"headers":[],"relativePath":"templates/intro.md","filePath":"templates/intro.md"}'),l={name:"templates/intro.md"};function n(p,s,c,r,i,d){return t(),e("div",null,s[0]||(s[0]=[o(`<h1 id="intro" tabindex="-1">Intro <a class="header-anchor" href="#intro" aria-label="Permalink to &quot;Intro&quot;">​</a></h1><p>Go template is a powerful tool to generate text output. It is used in many places, such as Kubernetes, Helm, and so on.</p><p>To see the details of Go template, please refer to the official document: <a href="https://pkg.go.dev/text/template" target="_blank" rel="noreferrer">https://pkg.go.dev/text/template</a>.</p><h2 id="use-examples-with-mugo" tabindex="-1">Use examples with mugo <a class="header-anchor" href="#use-examples-with-mugo" aria-label="Permalink to &quot;Use examples with mugo&quot;">​</a></h2><p>With <code>mugo</code> we can use directly giveing values on commandline to run simple templates.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula vp-code" tabindex="0"><code><span class="line"><span style="color:#50FA7B;">mugo</span><span style="color:#BD93F9;"> -s</span><span style="color:#BD93F9;"> -d</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">{&quot;name&quot;: &quot;mugo&quot;}</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;"> -</span><span style="color:#FF79C6;"> &lt;&lt;&lt;</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">{{.name}}</span><span style="color:#E9F284;">&quot;</span></span></code></pre></div><p>Or we write template and stop stdin with <code>ctrl+d</code>.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula vp-code" tabindex="0"><code><span class="line"><span style="color:#50FA7B;">mugo</span><span style="color:#BD93F9;"> -d</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">{&quot;name&quot;: &quot;mugo&quot;}</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;"> -</span></span></code></pre></div><p>But for more complex templates files are better option for now.</p><p>This is a <code>values.yaml</code> file</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki dracula vp-code" tabindex="0"><code><span class="line"><span style="color:#8BE9FD;">name</span><span style="color:#FF79C6;">:</span><span style="color:#F1FA8C;"> mugo</span></span></code></pre></div><p>And this is our template file <code>name.tpl</code></p><div class="language-tpl"><button title="Copy Code" class="copy"></button><span class="lang">tpl</span><pre class="shiki dracula vp-code" tabindex="0"><code><span class="line"><span>{{ .name }}</span></span></code></pre></div><p>To run with <code>mugo</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula vp-code" tabindex="0"><code><span class="line"><span style="color:#50FA7B;">mugo</span><span style="color:#BD93F9;"> -s</span><span style="color:#BD93F9;"> -d</span><span style="color:#F1FA8C;"> @values.yaml</span><span style="color:#BD93F9;"> -t</span><span style="color:#F1FA8C;"> @name.tpl</span></span>
<span class="line"><span style="color:#6272A4;">#mugo</span></span></code></pre></div><p>Log output is move to stderr and template output is moved to stdout.</p><p>When we redirect to file, we use redirection or <code>-o</code> flag.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula vp-code" tabindex="0"><code><span class="line"><span style="color:#50FA7B;">mugo</span><span style="color:#BD93F9;"> -d</span><span style="color:#F1FA8C;"> @values.yaml</span><span style="color:#F1FA8C;"> name.tpl</span><span style="color:#BD93F9;"> -o</span><span style="color:#F1FA8C;"> name.txt</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula vp-code" tabindex="0"><code><span class="line"><span style="color:#50FA7B;">mugo</span><span style="color:#BD93F9;"> -d</span><span style="color:#F1FA8C;"> @values.yaml</span><span style="color:#F1FA8C;"> name.tpl</span><span style="color:#FF79C6;"> &gt;</span><span style="color:#F1FA8C;"> name.txt</span></span></code></pre></div>`,19)]))}const y=a(l,[["render",n]]);export{m as __pageData,y as default};
