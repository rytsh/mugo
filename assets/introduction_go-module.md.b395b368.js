import{_ as s,o as a,c as n,O as l}from"./chunks/framework.cdae9d71.js";const i=JSON.parse('{"title":"Use in Go","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/go-module.md","filePath":"introduction/go-module.md"}'),p={name:"introduction/go-module.md"},o=l(`<h1 id="use-in-go" tabindex="-1">Use in Go <a class="header-anchor" href="#use-in-go" aria-label="Permalink to &quot;Use in Go&quot;">​</a></h1><p>Mugo&#39;s internal template runner and functions are available as a Go package.</p><h2 id="templatex" tabindex="-1">templatex <a class="header-anchor" href="#templatex" aria-label="Permalink to &quot;templatex&quot;">​</a></h2><p><code>templatex</code> is a package that provides a template runner with options.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">github.com/rytsh/mugo/pkg/templatex</span></span></code></pre></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><p>Check details in go document: <a href="https://pkg.go.dev/github.com/rytsh/mugo/pkg/templatex" target="_blank" rel="noreferrer">https://pkg.go.dev/github.com/rytsh/mugo/pkg/templatex</a></p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">tpl </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">tpl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddFunc</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">add</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> b</span></span>
<span class="line"><span style="color:#89DDFF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">tpl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddFunc</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sub</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> b</span></span>
<span class="line"><span style="color:#89DDFF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> output bytes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> tpl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Execute</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithIO</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">output</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithData</span><span style="color:#89DDFF;">(map[</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">]interface{}{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}),</span></span>
<span class="line"><span style="color:#A6ACCD;">    templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithContent</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">a + b = {{ add .a .b }}</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">a - b = {{ sub .a .b }}</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Fatal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> output</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Output:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// a + b = 3</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// a - b = -1</span></span></code></pre></div><h2 id="fstore" tabindex="-1">fstore <a class="header-anchor" href="#fstore" aria-label="Permalink to &quot;fstore&quot;">​</a></h2><p><code>fstore</code> is a package that provides bunch of functions with options.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">github.com/rytsh/mugo/pkg/fstore</span></span></code></pre></div><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><p>Check details in go document: <a href="https://pkg.go.dev/github.com/rytsh/mugo/pkg/fstore" target="_blank" rel="noreferrer">https://pkg.go.dev/github.com/rytsh/mugo/pkg/fstore</a></p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">tpl </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> template</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Funcs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fstore</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FuncMap</span><span style="color:#89DDFF;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">output </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">bytes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">tplParsed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> tpl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Parse</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">{{ $v := codec.JsonDecode (codec.StringToByte .) }}{{ $v.data.name }}</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Fatal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> tplParsed</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Execute</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">output</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">{&quot;data&quot;: {&quot;name&quot;: &quot;Hatay&quot;}}</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Fatal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> output</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Output:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Hatay</span></span></code></pre></div><h1 id="use-fstore-with-templatex" tabindex="-1">Use fstore with templatex <a class="header-anchor" href="#use-fstore-with-templatex" aria-label="Permalink to &quot;Use fstore with templatex&quot;">​</a></h1><p><code>fstore</code> and <code>templatex</code> can be used together. Use the tpl to execute templates.</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">tpl </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithAddFuncsTpl</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    fstore</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FuncMapTpl</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        fstore</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithLog</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">logz</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AdapterKV</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Log</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> log</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Logger</span><span style="color:#89DDFF;">}),</span></span>
<span class="line"><span style="color:#A6ACCD;">        fstore</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithTrust</span><span style="color:#89DDFF;">(true),</span></span>
<span class="line"><span style="color:#A6ACCD;">        fstore</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithWorkDir</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> buf bytes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer</span></span>
<span class="line"><span style="color:#A6ACCD;">err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> tpl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Execute</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithContent</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{.Count}} items are made of {{.Material}}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithData</span><span style="color:#89DDFF;">(map[</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">]interface{}{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Count</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Material</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wood</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}),</span></span>
<span class="line"><span style="color:#A6ACCD;">    templatex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithIO</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Fatal</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Err</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Msg</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">failed to execute template</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Output:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3 items are made of wood</span></span></code></pre></div>`,17),e=[o];function t(c,r,D,F,y,A){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{i as __pageData,u as default};
