import{_ as s,o as a,c as e,O as o}from"./chunks/framework.cdae9d71.js";const u=JSON.parse('{"title":"Intro","description":"","frontmatter":{},"headers":[],"relativePath":"templates/intro.md","filePath":"templates/intro.md"}'),t={name:"templates/intro.md"},l=o(`<h1 id="intro" tabindex="-1">Intro <a class="header-anchor" href="#intro" aria-label="Permalink to &quot;Intro&quot;">​</a></h1><p>Go template is a powerful tool to generate text output. It is used in many places, such as Kubernetes, Helm, and so on.</p><p>To see the details of Go template, please refer to the official document: <a href="https://pkg.go.dev/text/template" target="_blank" rel="noreferrer">https://pkg.go.dev/text/template</a>.</p><h2 id="use-examples-with-mugo" tabindex="-1">Use examples with mugo <a class="header-anchor" href="#use-examples-with-mugo" aria-label="Permalink to &quot;Use examples with mugo&quot;">​</a></h2><p>With <code>mugo</code> we can use directly giveing values on commandline to run simple templates.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mugo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{&quot;name&quot;: &quot;mugo&quot;}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{.name}}</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>Or we write template and stop stdin with <code>ctrl+d</code>.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mugo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{&quot;name&quot;: &quot;mugo&quot;}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span></span></code></pre></div><p>But for more complex templates files are better option for now.</p><p>This is a <code>values.yaml</code> file</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mugo</span></span></code></pre></div><p>And this si our template file <code>name.tpl</code></p><div class="language-tpl"><button title="Copy Code" class="copy"></button><span class="lang">tpl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{{ .name }}</span></span></code></pre></div><p>To run with <code>mugo</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mugo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@values.yaml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name.tpl</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#mugo</span></span></code></pre></div><p>Log output is move to stderr and template output is moved to stdout.</p><p>When we redirect to file, we use redirection or <code>-o</code> flag.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mugo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@values.yaml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name.tpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name.txt</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mugo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@values.yaml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name.tpl</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name.txt</span></span></code></pre></div>`,19),n=[l];function p(c,r,i,C,d,y){return a(),e("div",null,n)}const D=s(t,[["render",p]]);export{u as __pageData,D as default};
